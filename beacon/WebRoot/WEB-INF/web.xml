<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <display-name>beacon</display-name>
    <!-- log4j的资源位置  -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:conf/log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>beacon.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>true</param-value>
	</context-param>
    <!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔,此参数用于后面的Spring Context Loader -->
    <context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>classpath:spring/applicationContext*.xml</param-value>
    </context-param>
  
    <!--
    	加载spring的加载器，加载器目前使用Jeaw框架的spring加载器，通过该加载器会自动加载contextConfigLocation
    -->
    <listener>
    	<listener-class>com.wholetech.commons.ssh.extend.SpringContextHolder</listener-class>
    </listener>
    <listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
    <!-- 统一编码过滤器 -->
    <filter>
    	<filter-name>encodingFilter</filter-name>
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    	<init-param>
        	<param-name>encoding</param-name>
        	<param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
    	<filter-name>encodingFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- session开关过滤器，每次请求使用同一个HibernateSession -->
    <filter>
    	<filter-name>hibernateFilter</filter-name>
    	<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  	</filter>
    <filter-mapping>
    	<filter-name>hibernateFilter</filter-name>
    	<url-pattern>*.action</url-pattern>
    </filter-mapping>
    <filter-mapping>
    	<filter-name>hibernateFilter</filter-name>
    	<url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <!-- struts2配置 -->
    <filter>
    	<filter-name>struts2</filter-name>
    	<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
        <init-param>
        	<param-name>actionPackages</param-name>
     		<param-value>com.beacon</param-value>
        </init-param>
    </filter>
    <filter-mapping>
    	<filter-name>struts2</filter-name>
    	<url-pattern>*.action</url-pattern>
    </filter-mapping>
    <filter-mapping>
    	<filter-name>struts2</filter-name>
    	<url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <!-- 标签库配置 -->
    <jsp-config>
		<taglib>
			<taglib-uri>/WEB-INF/c.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/c.tld</taglib-location>
		</taglib>
	    <taglib>
			<taglib-uri>/WEB-INF/fmt.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/fmt.tld</taglib-location>
		</taglib>
  	</jsp-config>
	<!-- 错误处理 -->
	<error-page>
		<error-code>403</error-code>
		<location>/blank.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/blank.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/blank.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/blank.jsp</location>
	</error-page>
	
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
</web-app>
